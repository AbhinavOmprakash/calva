version: 2
jobs:
  test:
    docker:
      - image: circleci/openjdk:11.0.4-stretch-node
    working_directory: ~/calva
    steps:
      - checkout:
          path: ~/calva
      - restore_cache:
          name: Restore dependencies
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install node_modules
          command: npm install
      - run:
          name: Compile and Run Tests
          command: npm run compile-cljs
      - save_cache:
          name: Save dependencies
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
            - ~/.m2
  build:
    docker:
      - image: circleci/openjdk:11.0.4-stretch-node
    working_directory: ~/calva
    steps:
      - checkout:
          path: ~/calva
      - restore_cache:
          name: Restore dependencies
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "Create artifacts workspace"
          command: mkdir /tmp/artifacts
      - run:
          name: Tamper Calva version if not master
          command: |
            VERSION=$(node -p 'require("./package.json").version')
            TAG_VERSION=NO-TAG
            if [[ "${CIRCLE_TAG}" =~ ^v([0-9]+\.[0-9]+\.[0-9]+)$ ]]
            then
              TAG_VERSION=${BASH_REMATCH[1]}
              echo 'No version tampering because this is a release tag'
            else
              COMMIT=${CIRCLE_SHA1:0:8}
              if [[  "${CIRCLE_TAG}" =~ ^v([0-9]+\.[0-9]+\.[0-9]+)-(.*) ]]
              then
                TAG_VERSION=${BASH_REMATCH[1]}
                TAG_TITLE=${BASH_REMATCH[2]}
                PRERELEASE=${TAG_TITLE}-${COMMIT}
              else
                BRANCH=${CIRCLE_BRANCH//[^[:alnum:]]/-}
                PRERELEASE=${BRANCH}-${COMMIT}
              fi
              echo "Append prerelease to version: -${PRERELEASE}"
              npx json -I -f package.json -e 'this.version=this.version.replace(/$/,"-'${PRERELEASE}'")'
            fi
            if [ ${TAG_VERSION} = NO-TAG -o "${TAG_VERSION}" = "${VERSION}"  ]
            then
              VERSION=$(node -p 'require("./package.json").version')
              echo "Using version: ${VERSION}"
              echo VERSION=${VERSION} > /tmp/env
            else
              echo >&2 "FATAL! Version missmatch between package.json and tag. Aborting."
              exit 1
            fi
      - run:
          name: Package vsix
          command: npx vsce package
      - run:
          name: Copy vsix
          command: |
            cp *.vsix /tmp/artifacts/
      - store_artifacts:
          path: /tmp/artifacts
      - persist_to_workspace:
          root: /tmp
          paths:
            - artifacts
            - env
  github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: "Publish Release on GitHub"
          command: |
            source /tmp/env || echo "No env? Hopefully a local run."
            EXTRA_RELEASE_OPTIONS=""

            if [ "${CIRCLE_TAG}" =~ "^v\d+\.\d+\.\d+$" ]
            then
              echo "Publishing GitHub Release: ${CIRCLE_TAG}"
            else
              echo "Publishing GitHub Prerelease: ${CIRCLE_TAG}"
              EXTRA_RELEASE_OPTIONS=-prerelease
            fi
            GHR_ARGS="-t ${GITHUB_TOKEN} ${EXTRA_RELEASE_OPTIONS} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} /tmp/artifacts/"

            if [ -z "${CIRCLE_BUILD_NUM}" ]
            then
              echo "Dry ghr ${GHR_ARGS}"
            else
              ghr ${GHR_ARGS}
            fi
  marketplace-publish:
    docker:
      - image: circleci/openjdk:11.0.4-stretch-node
    working_directory: ~/calva
    steps:
      - attach_workspace:
          at: /tmp
      - checkout:
          path: ~/calva
      - restore_cache:
          name: Restore dependencies
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Publish to the marketplace
          command: npx vsce publish --packagePath /tmp/artifacts/calva-$(node -p 'require("./package.json").version').vsix -p ${PUBLISH_TOKEN}
workflows:
  version: 2
  build-test:
    jobs:
      - test
      - build:
          requires:
            - test
  build-test-release-publish:
    jobs:
      - test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+-?.*/
      - build:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+-?.*/
      - github-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+-?.*/
          context: Calva
      - marketplace-publish:
          requires:
            - github-release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
          context: Calva
